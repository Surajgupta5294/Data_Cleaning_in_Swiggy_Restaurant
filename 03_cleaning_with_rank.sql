use swiggy_resturent;
select * from clean;


-- 1. Rank every restaurant from most expensive to least expensive
select *,rank() over(order by cost desc) as 'rank' from  clean;
select *,dense_rank() over(order by cost desc) as 'dense_rank' from  clean;
select *,row_number() over(order by cost desc) as 'row_number_rank' from  clean;


-- 2. Rank every restaurant from most visited to least visited
select *,row_number() over (order by rating_count desc) as 'rank' from  clean;



-- 3. Rank every restaurant from most expensive to least expensive as per their city
select *,rank() over ( partition by city  order by cost desc) as 'rank' from  clean;
select *,dense_rank() over ( partition by city  order by cost desc) as 'dense_rank' from  clean;
select *,row_number() over ( partition by city  order by cost desc) as 'row_number_rank' from  clean;
select *, row_number() over() as 'rank' from  clean;




-- 4. Dense-rank every restaurant from most expensive to least expensive as per their city
select *,rank() over ( partition by city  order by cost desc) as 'rank',
          dense_rank() over ( partition by city  order by cost desc) as 'dense_rank' ,
            row_number() over ( partition by city  order by cost desc) as 'row_number_rank' 
  from  clean;



-- 5. Row-number every restaurant from most expensive to least expensive as per their city
select *,row_number() over(order by cost desc) as 'row_number_rank' from  clean;


-- 6. Rank every restaurant from most expensive to least expensive as per their city along with its city [Adilabad - 1, Adilabad - 2]
select *,row_number() over(order by cost desc) as 'row_number_rank' from  clean;
select *, concat(city ,'-',row_number() over(partition by city order by cost desc)) as 'rank' from  clean;


-- 7. Find top 5 restaurants of every city as per their revenue
select * from (
	select *, 
		cost*rating_count as 'revenue',
		row_number() over(partition by city order by rating_count*cost desc) as 'rank' 
	from  clean
) t 
   where t.rank <= 5;
   

select city,sum(revenue) as 'revenue' from (
	select *, 
		cost*rating_count as 'revenue',
		row_number() over(partition by city order by rating_count*cost desc) as 'rank' 
	from  clean
) t 
  where t.rank <= 5
	group by city
		order by revenue desc limit 5;

select cuisine,sum(revenue) as 'revenue' from (
	select *, 
		cost*rating_count as 'revenue',
		row_number() over(partition by city order by rating_count*cost desc) as 'rank' 
	from  clean
) t 
  where t.rank <= 5
	group by cuisine
		order by revenue desc limit 5;

        
        
-- 8. Find top 5 restaurants of every cuisine as per their revenue
select * from (
	select *, 
		cost*rating_count as 'revenue',
		row_number() over(partition by city order by rating_count*cost desc) as 'rank' 
	from  clean
) t
  where t.rank <= 5;
  

-- 9. List the top 5 cuisines as per the revenue generated by top 5 restaurants of every cuisine
select cuisine,sum(rating_count*cost) as 'revenue' from (
	select *, 
		row_number() over(partition by city order by rating_count*cost desc) as 'rank' 
	from  clean
) t 
  where t.rank <= 5
	group by cuisine
		order by revenue desc limit 5;
        

-- 10. What % of the total revenue is generated by top 1% restaurants        
select sum(cost*rating_count) as 'total_revenue'
	from (
			select *, cost*rating_count ,row_number() over(order by cost*rating_count desc) as 'rank' 
			from  clean) t
where 
  t.rank <= ((select count(*) from  clean)/100);
--  462,914,000 = 17.5%


-- 11. Check the same for top 20% restaurants
select sum(cost*rating_count) as 'total_revenue'
	from (
			select *, cost*rating_count ,row_number() over(order by cost*rating_count desc) as 'rank' 
			from  clean) t
where 
  t.rank <= ((select count(*) from  clean)/100*20);

  
  
